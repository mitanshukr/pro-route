{"version":3,"sources":["context/context-store.js","App.js","components/Layout.js","components/Login.js","components/Logout.js","components/PrivatePage.js","components/PublicPage.js","hoc/AuthRoute.js","Assets/Images/flow-chart.png","components/HomePage.js","index.js"],"names":["authContext","createContext","isAuth","login","logout","ContextProvider","props","useState","setAuth","contextValue","global","localStorage","setItem","Provider","value","children","App","authStatus","useContext","useEffect","getItem","path","exact","component","HomePage","PublicPage","Login","Logout","Layout","location","useLocation","className","to","pathname","state","from","history","useHistory","isBtnClicked","setBtnStatus","useRef","isLogout","replace","timer","clearTimeout","current","isAuthRoute","onClick","setTimeout","disabled","prevLocation","PrivatePage","AuthRoute","rest","render","src","flowChart","alt","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcc6a6bc.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst authContext = createContext({\r\n  //optional: default value\r\n  isAuth: false,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst ContextProvider = (props) => {\r\n  const [isAuth, setAuth] = useState(false);\r\n\r\n  const loginHandler = () => {\r\n    setAuth(true);\r\n    global.localStorage.setItem(\"user-auth-status\", true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setAuth(false);\r\n    global.localStorage.setItem(\"user-auth-status\", false);\r\n  };\r\n\r\n  const contextValue = {\r\n    isAuth: isAuth,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <authContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </authContext.Provider>\r\n  );\r\n};\r\n\r\nexport { authContext, ContextProvider };\r\n","import { Route } from \"react-router\";\nimport { authContext } from \"./context/context-store\";\n\nimport HomePage from \"./components/HomePage\";\nimport Layout from \"./components/Layout\";\nimport Login from \"./components/Login\";\nimport Logout from \"./components/Logout\";\nimport PrivatePage from \"./components/PrivatePage\";\nimport PublicPage from \"./components/PublicPage\";\nimport { useContext, useEffect } from \"react\";\nimport AuthRoute from \"./hoc/AuthRoute\";\n\nfunction App() {\n  const authStatus = useContext(authContext);\n\n  useEffect(() => {\n    if (global.localStorage.getItem(\"user-auth-status\") === \"true\") {\n      authStatus.login();\n    }\n  });\n\n  return (\n    <Layout>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/public-page\" exact component={PublicPage} />\n      <AuthRoute path=\"/private-page\" exact>\n        <PrivatePage />\n      </AuthRoute>\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/logout\" exact component={Logout} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { useContext } from \"react\";\r\nimport { authContext } from \"../context/context-store\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport \"./Layout.css\";\r\nimport \"./style.css\";\r\n\r\nconst Layout = (props) => {\r\n  const authStatus = useContext(authContext);\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"Layout\">\r\n      <header className=\"Layout-header\">\r\n        <h1>Logo</h1>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\" exact>\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/public-page\">Public Page</NavLink>\r\n            </li>\r\n            {authStatus.isAuth ? (\r\n              <>\r\n                <li>\r\n                  <NavLink to=\"/private-page\">Private Page</NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink\r\n                    to={{\r\n                      pathname: \"/logout\",\r\n                      state: { from: location },\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location },\r\n                  }}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport { authContext } from \"../context/context-store\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const authStatus = useContext(authContext);\r\n  const [isBtnClicked, setBtnStatus] = useState(false);\r\n  // Here, we can trace the previous location from  the **location?.state?.from**\r\n  let from = useRef(location?.state?.from || { pathname: \"/\" });\r\n\r\n  useEffect(() => {\r\n    if (location?.state?.isLogout) {\r\n      // If TRUE, then this means the Logout prevLocation\r\n      // was a Protected Page, resulting to land in <AuthRoute/>;\r\n      // which anyway redirects to Login Page if the user is not logged-In;\r\n      // but with extra **isLogout:true** Flag.\r\n      // We use this flag to track and navigate the user\r\n      // to Homepage in such scenario.\r\n      history.replace(\"/\");\r\n    }\r\n  });\r\n\r\n  let timer = null;\r\n  const loginSubmitHandler = () => {\r\n    if (isBtnClicked) return;\r\n    setBtnStatus(true);\r\n    timer = setTimeout(() => {\r\n      authStatus.login();\r\n      history.replace(from.current);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setBtnStatus(false);\r\n      clearTimeout(timer);\r\n    };\r\n  }, [timer]);\r\n\r\n  return (\r\n    <>\r\n      {authStatus.isAuth ? (\r\n        <Redirect to={from.current} />\r\n      ) : (\r\n        <div className=\"page\">\r\n          <h2>Login Page</h2>\r\n          {location?.state?.isAuthRoute ? (\r\n            <p>Please login to Continue...</p>\r\n          ) : (\r\n            <p>Click the below button to Login...</p>\r\n          )}\r\n          <button\r\n            onClick={loginSubmitHandler}\r\n            disabled={authStatus.isAuth || isBtnClicked}\r\n          >\r\n            {authStatus.isAuth\r\n              ? \"Already Logged In\"\r\n              : isBtnClicked\r\n              ? \"Logging In..wait\"\r\n              : \"Click Me to Login\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { authContext } from \"../context/context-store\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const authStatus = useContext(authContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      authStatus.logout();\r\n      let prevLocation = null;\r\n      if (location?.state?.from) {\r\n        prevLocation = {\r\n          ...location?.state?.from,\r\n          state: { isLogout: true },\r\n        };\r\n      }\r\n      history.replace(prevLocation || \"/\");\r\n    }, 1000);\r\n    // return () => {\r\n    //   authStatus.logout();\r\n    // };\r\n  }, [authStatus, history, location]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <p>Logging you out...please wait!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","const PrivatePage = () => {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Private Page</h2>\r\n      <p>Access Allowed only to LoggedIn Users!🤟🔥</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivatePage;\r\n","const PublicPage = () => {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Public Page</h2>\r\n      <p>Access Allowed to everyone!😄</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicPage;\r\n","import { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { authContext } from \"../context/context-store\";\r\n\r\nconst AuthRoute = (props) => {\r\n  const authStatus = useContext(authContext);\r\n  const { children, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        authStatus.isAuth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: {\r\n                from: location,\r\n                isAuthRoute: true,\r\n                isLogout: location?.state?.isLogout,\r\n              },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","export default __webpack_public_path__ + \"static/media/flow-chart.51c2530e.png\";","import flowChart from \"../Assets/Images/flow-chart.png\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Hi, Welcome to My Website.</h2>\r\n      <p>This is the Homepage of the application.🏡😻</p>\r\n      <img src={flowChart} alt={\"Navigation Flow\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ContextProvider } from \"./context/context-store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}